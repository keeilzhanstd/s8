---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml --out ./k8s
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
  selector:
    io.kompose.service: kafka
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml --out ./k8s
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqldb
  name: mysqldb
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    io.kompose.service: mysqldb
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml --out ./k8s
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: spring-boot-s8-app
  name: spring-boot-s8-app
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: spring-boot-s8-app
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml --out ./k8s
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: zookeeper
  name: zookeeper
spec:
  ports:
    - name: "2181"
      port: 2181
      targetPort: 2181
  selector:
    io.kompose.service: zookeeper
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml --out ./k8s
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.network/s8challenge-default: "true"
    io.kompose.service: kafka
  name: kafka
spec:
  containers:
    - env:
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: kafka
        - name: KAFKA_NUM_PARTITIONS
          value: "12"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
      image: wurstmeister/kafka
      name: kafka
      ports:
        - containerPort: 9092
      resources: {}
  restartPolicy: OnFailure
status: {}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: s8challenge-default
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/s8challenge-default: "true"
  podSelector:
    matchLabels:
      io.kompose.network/s8challenge-default: "true"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml --out ./k8s
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqldb
  name: mysqldb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysqldb
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml --out ./k8s
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/s8challenge-default: "true"
        io.kompose.service: mysqldb
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: challenge
            - name: MYSQL_ROOT_PASSWORD
              value: root
          image: mysql:8-oracle
          name: mysqldb
          ports:
            - containerPort: 3306
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml --out ./k8s
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: spring-boot-s8-app
  name: spring-boot-s8-app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: spring-boot-s8-app
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml --out ./k8s
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/s8challenge-default: "true"
        io.kompose.service: spring-boot-s8-app
    spec:
      containers:
        - env:
            - name: MYSQL_HOST
              value: mysqldb
            - name: MYSQL_PASSWORD
              value: root
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_USER
              value: root
          image: spring-boot-s8-app
          name: s8bc-app
          ports:
            - containerPort: 8080
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml --out ./k8s
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zookeeper
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml --out ./k8s
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/s8challenge-default: "true"
        io.kompose.service: zookeeper
    spec:
      containers:
        - image: wurstmeister/zookeeper
          name: zookeeper
          ports:
            - containerPort: 2181
          resources: {}
      restartPolicy: Always
status: {}

